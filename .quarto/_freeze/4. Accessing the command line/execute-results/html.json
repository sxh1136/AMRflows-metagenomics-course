{
  "hash": "96c7a3c07a04c2d92397fafcff408288",
  "result": {
    "markdown": "---\ntitle: 3. Accessing the Command Line\n---\n\n\n\nBefore we dive into metagenomic analysis using the command line, it's important to know how to access this powerful tool. The method you use to access the command line can vary depending on your operating system. Here, we'll cover the most common methods for Windows, macOS, and Linux users.\n\n### For Windows Users\n\nGit Bash \n\nDownload Git Bash: This is my preferred windows terminal experience, and you can download and use Git Bash from the official Git website (https://git-scm.com/). Git Bash combines the power of the Bash shell with Git commands, making it a versatile choice for command line tasks. There are alternatives such as Windows Terminal but I have limited experience with them\n\n### For Mac Users\n\nTerminal\n\nTerminal is included in Mac installations by default. You can open it by:\n* Spotlight Search: Press Command + Spacebar to open Spotlight Search.\n\n* Type Terminal and press Enter: This will open the Terminal application.\n\n### For Linux Users\n\nTerminal\n\nTerminal is included in Linux distributions by default. You can open it by:\n* Shortcut: Most Linux distributions have a keyboard shortcut to open the terminal. Common shortcuts include Ctrl + Alt + T or Super (Windows key) + T.\n\n* Right click desktop, and open \"Terminal\"\nIntroduction to Bash\n\nAs mentioned in the previous section, we will be using the Bash shell throughout this course for our command line interactions. Bash is the default shell for most Linux distributions and is also available for Windows via Git Bash. MacOS uses Z shell which is built on Bash and should behave almost identically.\n\n### Why Bash?\n\n* Compatibility: Bash is widely supported across different operating systems, making it a good choice for cross-platform work.\n\n* Scripting Capabilities: Bash is a powerful scripting language, allowing you to automate tasks and create reusable scripts for your metagenomic analyses.\n\n* Community and Documentation: Bash has a large and active user community, which means you can easily find help and resources online.\n\n### Let's Test the Waters\n\nLet's make sure you're all set to start this adventure. We'll do a quick test to make sure your Command Line is up and running.\n\nOpen your Command Line or Terminal using the method that suits your computer (Command Prompt, Git Bash, Terminal, or equivalent).\n\nNow, in the window that just opened, type this and press enter:\n\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\necho \"Hello, Command Line!\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\"Hello, Command Line!\"\n```\n:::\n:::\n\n\nDid you see a friendly \"Hello, Command Line!\" response? If yes, great job! You're ready to roll.\n\n### Navigating the File System\n\nBefore we start using advanced commands, let's get comfortable with navigating the file system using the command line. In your terminal, you can use commands like ls (list files), cd (change directory), and pwd (print working directory) to explore your computer's file structure. \n\n* Note that what we typically call folders are called directories on the command line\n\nExercise\n\n* Type ls and press Enter. This will show you what's in your current location (directory).\n\n* Now, type cd followed by a folder name (e.g., cd Documents) and press Enter. You've now moved into that folder.\n\n* To find out where you are now, type pwd and press Enter. It's like checking your GPS location.\n\nNow that you know how to access the command line and navigate the file system, you're ready to start using the Bash shell for metagenomic analysis. In the next section, we'll explore some basic Bash commands and how to perform common file operations.\n\n",
    "supporting": [
      "4. Accessing the command line_files"
    ],
    "filters": [],
    "includes": {}
  }
}